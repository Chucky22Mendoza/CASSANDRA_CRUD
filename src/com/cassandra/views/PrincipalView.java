/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cassandra.views;

import com.cassandra.cql.CQL_operations;
import com.cassandra.obj.Video_Game;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author loginlock
 */
public class PrincipalView extends javax.swing.JFrame {

    /**
     * Creates new form PrincipalView
     */
    public PrincipalView() throws ParseException {
        initComponents();
        this.setLocationRelativeTo(null); 
        txtEnabled(false);
        clearTxt();
        btnCancel.doClick();
        showTable();
    }
    
    void txtEnabled(boolean value){
        txtTitle.setEnabled(value);
        txtDirector.setEnabled(value);
        txtProducer.setEnabled(value);
        cbPlatform.setEnabled(value);
        dcReleaseDate.setEnabled(value);
    }
    
    void clearTxt(){
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy");
        String dateInString = "30-May-2015";
        
        txtTitle.setText("");
        txtDirector.setText("");
        txtProducer.setText("");
        cbPlatform.setSelectedIndex(0);
        try {
            Date date = formatter.parse(dateInString);
            dcReleaseDate.setDate(date);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        
    }
    
    void selectFirstRow() throws ParseException{
        int row = contentTable.getRowCount();
        
        if(row >= 0){
            SimpleDateFormat formatter = new SimpleDateFormat("MMM d, yyyy");
            
            String title = contentTable.getValueAt(0, 1).toString();
            String director = contentTable.getValueAt(0, 2).toString();
            String producer = contentTable.getValueAt(0, 3).toString();
            String platform = contentTable.getValueAt(0, 4).toString();
            String dateInString = contentTable.getValueAt(0, 5).toString();
            Date release_date = formatter.parse(dateInString);
            
            txtTitle.setText(title);
            txtDirector.setText(director);
            txtProducer.setText(producer);
            int cont = cbPlatform.getItemCount();
            for (int i = 0; i < cont; i++) {
                String plat = cbPlatform.getItemAt(i);
                if(plat.equals(platform)){
                    platform_index = i;
                }
            }
            cbPlatform.setSelectedIndex(platform_index);
            dcReleaseDate.setDate(release_date);
            
        }else{
            JOptionPane.showMessageDialog(null, "Sin datos almacenados","Error", 2);
        }
    }
    
    //Método para consultar todos los registros
    private void showTable(){
        try{
            DefaultTableModel model = (DefaultTableModel) contentTable.getModel();
            model.setRowCount(0); 
            List<Video_Game> video_games = CQL_operations.getRecord();
            
            for (int i = 0; i < video_games.size(); i++) {
                Object [] row = new Object[6];
                row[0] = video_games.get(i).getId();
                row[1] = video_games.get(i).getTitle();
                row[2] = video_games.get(i).getDirector();
                row[3] = video_games.get(i).getProducer();
                row[4] = video_games.get(i).getPlatform();
                row[5] = video_games.get(i).getRelease_date();
                
                model.addRow(row);
            }
            contentTable.setModel(model);

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error en la consulta de datos", "¡Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        txtDirector = new javax.swing.JTextField();
        txtProducer = new javax.swing.JTextField();
        cbPlatform = new javax.swing.JComboBox<>();
        dcReleaseDate = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        contentTable = new javax.swing.JTable();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(44, 83, 100));
        jPanel1.setForeground(new java.awt.Color(153, 153, 153));
        jPanel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("CASSANDRA CRUD");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(15, 32, 39));
        jLabel2.setText("Title:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(15, 32, 39));
        jLabel3.setText("Director:");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(15, 32, 39));
        jLabel4.setText("Platform:");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(15, 32, 39));
        jLabel5.setText("Producer:");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(15, 32, 39));
        jLabel6.setText("Release Date:");

        txtTitle.setBackground(new java.awt.Color(32, 58, 67));
        txtTitle.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtTitle.setForeground(new java.awt.Color(255, 255, 255));
        txtTitle.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtDirector.setBackground(new java.awt.Color(32, 58, 67));
        txtDirector.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtDirector.setForeground(new java.awt.Color(255, 255, 255));
        txtDirector.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtProducer.setBackground(new java.awt.Color(32, 58, 67));
        txtProducer.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtProducer.setForeground(new java.awt.Color(255, 255, 255));
        txtProducer.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cbPlatform.setBackground(new java.awt.Color(255, 255, 255));
        cbPlatform.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        cbPlatform.setForeground(new java.awt.Color(0, 0, 0));
        cbPlatform.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "XBox", "PlayStation", "PC", "Nintendo", "Todas" }));

        dcReleaseDate.setBackground(new java.awt.Color(32, 58, 67));
        dcReleaseDate.setForeground(new java.awt.Color(15, 32, 39));
        dcReleaseDate.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        dcReleaseDate.setMinSelectableDate(new java.util.Date(-62135744326000L));

        contentTable.setBackground(new java.awt.Color(32, 58, 67));
        contentTable.setForeground(new java.awt.Color(255, 255, 255));
        contentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Title", "Director", "Producer", "Platform", "Release Date"
            }
        ));
        contentTable.setGridColor(new java.awt.Color(153, 153, 153));
        jScrollPane1.setViewportView(contentTable);

        btnNew.setBackground(new java.awt.Color(15, 32, 39));
        btnNew.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        btnNew.setForeground(new java.awt.Color(255, 255, 255));
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(15, 32, 39));
        btnSave.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(15, 32, 39));
        btnCancel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(15, 32, 39));
        btnDelete.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(15, 32, 39));
        btnEdit.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(15, 32, 39));
        btnUpdate.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(15, 32, 39));
        btnRefresh.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtTitle, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDirector, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtProducer, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(61, 61, 61)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cbPlatform, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(dcReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(65, 65, 65))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(186, 186, 186)
                                .addComponent(btnNew)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRefresh)
                                .addGap(59, 59, 59)
                                .addComponent(btnSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUpdate)))
                        .addGap(0, 147, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(411, 411, 411)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbPlatform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtProducer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnNew)
                    .addComponent(btnEdit)
                    .addComponent(btnUpdate)
                    .addComponent(btnRefresh))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtEnabled(true);
        txtTitle.setFocusable(true);
        clearTxt();
        
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnNew.setEnabled(false);
        
        btnRefresh.setEnabled(true);
        btnCancel.setEnabled(true);
        btnSave.setEnabled(true);
    }//GEN-LAST:event_btnNewActionPerformed

    private static int platform_index;
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed

        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);
        btnSave.setEnabled(false);
        btnNew.setEnabled(false);
        
        btnUpdate.setEnabled(true);
        btnRefresh.setEnabled(true);
        btnCancel.setEnabled(true);
        
        
        int row = contentTable.getSelectedRow();
        
        if(row >= 0){
            SimpleDateFormat formatter = new SimpleDateFormat("MMM d, yyyy");
            
            String title = contentTable.getValueAt(row, 1).toString();
            String director = contentTable.getValueAt(row, 2).toString();
            String producer = contentTable.getValueAt(row, 3).toString();
            String platform = contentTable.getValueAt(row, 4).toString();
            String dateInString = contentTable.getValueAt(row, 5).toString();
            
            try {
                Date release_date;
                release_date = formatter.parse(dateInString);
                dcReleaseDate.setDate(release_date);
            } catch (ParseException ex) {
                Logger.getLogger(PrincipalView.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            txtTitle.setText(title);
            txtDirector.setText(director);
            txtProducer.setText(producer);
            int cont = cbPlatform.getItemCount();
            for (int i = 0; i < cont; i++) {
                String plat = cbPlatform.getItemAt(i);
                if(plat.equals(platform)){
                    platform_index = i;
                }
            }
            cbPlatform.setSelectedIndex(platform_index);
            txtEnabled(true);
            txtTitle.setFocusable(true);
        }else{
            JOptionPane.showMessageDialog(null, "Fila no seleccionada","Error", 2);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        txtEnabled(false);
        clearTxt();
        
        btnSave.setEnabled(false);
        btnCancel.setEnabled(false);
        
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(true);
        btnUpdate.setEnabled(true);
        btnRefresh.setEnabled(true);
        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        try {
            btnSave.setEnabled(false);
            btnCancel.setEnabled(false);

            btnNew.setEnabled(true);
            btnEdit.setEnabled(true);
            btnDelete.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnRefresh.setEnabled(true);
            
            showTable();
            selectFirstRow();
        } catch (ParseException ex) {
            Logger.getLogger(PrincipalView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        SimpleDateFormat formatter = new SimpleDateFormat("MMM d, yyyy");
        
        Video_Game obj = new Video_Game();
        
        String title = txtTitle.getText();
        String director = txtDirector.getText();
        String producer = txtProducer.getText();
        String platform = cbPlatform.getItemAt(cbPlatform.getSelectedIndex());
        Date date = dcReleaseDate.getDate();
        String release_date = formatter.format(date);
        
        obj.setTitle(title);
        obj.setDirector(director);
        obj.setProducer(producer);
        obj.setPlatform(platform);
        obj.setRelease_date(release_date);
        
        CQL_operations.addRecord(obj);
        
        JOptionPane.showMessageDialog(null, "Guardado Correctamente","Éxito", 3);
        
        btnRefresh.doClick();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = contentTable.getSelectedRow();
        
        if(row >= 0){
            SimpleDateFormat formatter = new SimpleDateFormat("MMM d, yyyy");
            
            String id = contentTable.getValueAt(row, 0).toString();
            String title = contentTable.getValueAt(row, 1).toString();
            String director = contentTable.getValueAt(row, 2).toString();
            String producer = contentTable.getValueAt(row, 3).toString();
            String platform = contentTable.getValueAt(row, 4).toString();
            String dateInString = contentTable.getValueAt(0, 5).toString();
            
            try {
                Date release_date;
                release_date = formatter.parse(dateInString);
                dcReleaseDate.setDate(release_date);
            } catch (ParseException ex) {
                Logger.getLogger(PrincipalView.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            txtTitle.setText(title);
            txtDirector.setText(director);
            txtProducer.setText(producer);
            int cont = cbPlatform.getItemCount();
            for (int i = 0; i < cont; i++) {
                String plat = cbPlatform.getItemAt(i);
                if(plat.equals(platform)){
                    platform_index = i;
                }
            }
            
            cbPlatform.setSelectedIndex(platform_index);
            
            int conf = JOptionPane.showConfirmDialog(null, "¿Seguro que desea eliminar el registro seleccionado?", "Atención, Selecciona una opción", 1);
            
            if(conf == 0){
                CQL_operations.deleteRecord(id);
                JOptionPane.showMessageDialog(null, "Eliminado Correctamente","Éxito", 3);
            }else{
                JOptionPane.showMessageDialog(null, "Proceso Cancelado Correctamente","Éxito", 3);
            }
            
            btnRefresh.doClick();
            txtEnabled(false);
            
        }else{
            JOptionPane.showMessageDialog(null, "Fila no seleccionada","Error", 2);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int row = contentTable.getSelectedRow();
        
        if(row >= 0){
            Video_Game obj = new Video_Game();
            
            SimpleDateFormat formatter = new SimpleDateFormat("MMM d, yyyy");
            
            String id = contentTable.getValueAt(row, 0).toString();
            String title = txtTitle.getText();
            String director = txtDirector.getText();
            String producer = txtProducer.getText();
            String platform = cbPlatform.getItemAt(cbPlatform.getSelectedIndex());
            Date date = dcReleaseDate.getDate();
            String release_date = formatter.format(date);
            
            obj.setTitle(title);
            obj.setDirector(director);
            obj.setProducer(producer);
            obj.setPlatform(platform);
            obj.setRelease_date(release_date);
            
            int conf = JOptionPane.showConfirmDialog(null, "¿Seguro que desea editar el registro seleccionado?", "Atención, Selecciona una opción", 1);
            
            if(conf == 0){
                CQL_operations.updateRecord(obj, id);
                JOptionPane.showMessageDialog(null, "Editado Correctamente","Éxito", 3);
            }else{
                JOptionPane.showMessageDialog(null, "Proceso Cancelado Correctamente","Éxito", 3);
            }
            
            txtEnabled(false);
            btnRefresh.doClick();
        }else{
            JOptionPane.showMessageDialog(null, "Fila no seleccionada","Error", 2);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PrincipalView().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(PrincipalView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbPlatform;
    private javax.swing.JTable contentTable;
    private com.toedter.calendar.JDateChooser dcReleaseDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDirector;
    private javax.swing.JTextField txtProducer;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
